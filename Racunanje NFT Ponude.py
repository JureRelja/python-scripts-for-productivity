
def run():
    a = float(input("Cijena: "))

    c = a*0.22
    b = a - c


    print(b)

run()
run()

run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()

run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()

run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()

run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()
run()


